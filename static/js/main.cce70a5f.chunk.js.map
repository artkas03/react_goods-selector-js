{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","useState","good","setGood","noGoodSelectedBlock","className","goodSelectedBlock","type","onClick","clearGood","map","goodElement","isSelected","cn","newGood","selectGood","ReactDOM","render","document","getElementById"],"mappings":"4OAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwBC,mBAAS,OAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EACJ,oBAAIC,UAAU,sCAAd,+BAGIC,EACJ,qBAAID,UAAU,sCAAd,oBACMH,EADN,gBAGE,wBACE,UAAQ,cACRK,KAAK,SACLF,UAAU,cACVG,QAASC,OAaf,SAASA,IACPN,EAAQ,IAGV,OACE,mCACE,uBAAME,UAAU,oBAAhB,UACY,KAATH,EACGE,EACAE,EAGJ,uBAAOD,UAAU,QAAjB,SACE,gCACGN,EAAMW,KAAI,SAACC,GACV,IAAMC,EAAaV,IAASS,EAE5B,OACE,qBACE,UAAQ,OACRN,UAAWQ,IAAG,CACZ,+BAAgCD,IAHpC,UAOE,6BACE,wBACE,UACEA,EACI,eACA,YAENL,KAAK,SACLF,UAAWQ,IAAG,SAAU,CACtB,UAAWD,IAEbJ,QAAS,kBA5C7B,SAAoBI,EAAYE,GAC1BF,EACFH,IAEAN,EAAQW,GAwCuBC,CAAWH,EAAYD,IAVxC,SAYGC,EAAa,IAAM,QAIxB,oBAAI,UAAQ,YAAYP,UAAU,eAAlC,SACGM,MApBEA,gBCjEvBK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cce70a5f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [good, setGood] = useState('Jam');\n  const noGoodSelectedBlock = (\n    <h1 className=\"title is-flex is-align-items-center\">No goods selected</h1>\n  );\n\n  const goodSelectedBlock = (\n    <h1 className=\"title is-flex is-align-items-center\">\n      {`${good} is selected`}\n\n      <button\n        data-cy=\"ClearButton\"\n        type=\"button\"\n        className=\"delete ml-3\"\n        onClick={clearGood}\n      />\n    </h1>\n  );\n\n  function selectGood(isSelected, newGood) {\n    if (isSelected) {\n      clearGood();\n    } else {\n      setGood(newGood);\n    }\n  }\n\n  function clearGood() {\n    setGood('');\n  }\n\n  return (\n    <>\n      <main className=\"section container\">\n        {good === ''\n          ? noGoodSelectedBlock\n          : goodSelectedBlock\n        }\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((goodElement) => {\n              const isSelected = good === goodElement;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  className={cn({\n                    'has-background-success-light': isSelected,\n                  })}\n                  key={goodElement}\n                >\n                  <td>\n                    <button\n                      data-cy={\n                        isSelected\n                          ? 'RemoveButton'\n                          : 'AddButton'\n                      }\n                      type=\"button\"\n                      className={cn('button', {\n                        'is-info': isSelected,\n                      })}\n                      onClick={() => selectGood(isSelected, goodElement)}\n                    >\n                      {isSelected ? '-' : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {goodElement}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}